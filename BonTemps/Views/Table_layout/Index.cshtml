@using System.Threading
@{
    ViewBag.Title = "Tafel overzicht";
}

<h1 style="margin-left: 30%;" class="message">@ViewBag.message</h1>
<div class="@if(TempData["messageInfo"] != null){ <TEXT>container</TEXT>}">
    <div class="row">
        <div class="@if(TempData["messageInfo"] == null){ <TEXT>col-sm-1</TEXT>}">
            <div class="default items-col">
                @foreach (var reservation in ViewBag.Reservations)
                {
                    <hr />
                    for (var i = 0; i < Math.Ceiling((double)reservation.Persons / 2); i++)
                    {
                        <div class='card card-free' reservation-id="@reservation.Id"><span class="">@reservation.Customer.FirstName[0]@reservation.Customer.LastName[0]</span></div>
                    }
                }
            </div>
        </div>
        <div class="@if(TempData["messageInfo"] == null){ <TEXT>col-sm-11</TEXT>}">
            <div class='grid'>
                @foreach (var xAxis in ViewBag.tableLayout)
                {
                    <div class='col'>
                        @foreach (var yAxis in xAxis)
                        {
                            <div x="@yAxis.LayoutY" y="@yAxis.LayoutX" class='cell @yAxis.LayoutY-@yAxis.LayoutX @if (yAxis.IsTable == false){ <TEXT>no-table</TEXT>}'></div><!-- Since we loop through it in the wrong direction, we use the value from x on the y attr, and the other way around -->
                        }
                    </div>
                }
            </div>
            @if (TempData["messageInfo"] == null)
            {
                <button type="button" id="save-grid" class="btn btn-success" style="margin-left: 8px;">Opslaan</button>
            }
        </div>
    </div>
</div>

<img src="https://t4.ftcdn.net/jpg/01/18/74/15/240_F_118741564_fPRFBlHO5a98qdaeGRmTAD3Fc7lYmG3H.jpg" alt="trash bin" class="trash-bin" />



<script src='http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
<script src='http://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.2/jquery-ui.min.js'></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<!--<script  src="js/index.js"></script>-->
<script>
    $("#save-grid").on("click", function () {

        var tableLayoutReservationsModelView = [];

        $('.cell').each(function (i, obj) {
            var reservationId = 0;

            if ($(this).children().length > 0 ) {
                reservationId = $(this).children().eq(0).attr("reservation-id");
            }

            tableLayoutReservationsModelView.push({ LayoutX: $(this).attr("x"), LayoutY: $(this).attr("y"), ReservationId: reservationId });
        });

        var jsonTableLayoutReservationsModelView = JSON.stringify({ 'list': tableLayoutReservationsModelView });

        $.ajax({
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            type: 'POST',
            url: '@Url.Action("Save")',
            data: jsonTableLayoutReservationsModelView,
            success: function (response) {
                console.log(response);
            },
            failure: function (response) {
                console.log(response);
            }
        });


    });

    $('.card').draggable({
        appendTo: '.cell',
        start: function( event, ui ) {
            $(".trash-bin").effect("fade", 333);
        },
        scope: 'cells',
        stop: function () {
            $(".trash-bin").hide();
            if ($(this).parent().hasClass("default") !== true) {
                $(this).css({
                    top: "10%",
                    left: "10%"
                });
                $(this).children().addClass("text-occupied");
                // $(this).draggable("true");
            }
        }
    });

    var enableCells = function () {
        //$('.cell.cell-occupied').droppable('disable');
        //$('.no-table').droppable('disable');
        //$('.cell:not(.cell-occupied):not(.no-table)').droppable('enable');
        $('.cell, .trash-bin').droppable({
            tolerance: 'pointer',
            scope: 'cells',
            activeClass: 'cell-occupiable',
            hoverClass: 'cell-hover',
            accept: '.card',
            helper: 'clone',
            drop: function (evt, ui) {
                if ($(this).hasClass("trash-bin")) {
                    ui.draggable.appendTo(".items-col");
                    ui.draggable.removeClass("card-occupier").addClass("card-free");
                    ui.draggable.css("background", "").css("height", "").css("width", "");
                    ui.draggable.css("background", "").css("top", "").css("left", "");
                    ui.draggable.children("span").eq(0).removeClass("text-occupied").css("display", "");
                    ui.draggable.children("span").eq(1).hide();
                    setTimeout(function() {
                        $(".trash-bin").show().effect("bounce", { times: 1 }, 300);;
                    }, 1);
                    setTimeout(function () { $(".trash-bin").animate({ height: "5vw", width: "5vw" }); }, 333);
                    setTimeout(function () { $(".trash-bin").hide(); }, 700);


                } else {
                    if ($(this).find('.card').length >= 1 || $(this).hasClass('no-table')) {
                        // Cancel drag operation (make it always revert)
                        ui.draggable.draggable('option', 'revert', true);
                        return;
                    }

                    var draggableClass = ui.draggable.attr("class");
                    var droppableClass = $(this).attr("class");

                    var $cell = $(this);
                    var $card = $(ui.draggable);
                    $card.closest('.cell').removeClass('cell-occupied');
                    $card.appendTo($cell);
                    $card.addClass('card-occupier');
                    $card.removeClass('card-free');
                    $cell.addClass('cell-occupied');
                }
            }
        });
    }


    //$('.cell').droppable();
    enableCells();


    function getRandomColor() {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }

    var color = "#fff";


</script>
@{
    var lastReservationId = 0;
    var count = 0;
}

@foreach (var item in ViewBag.ReservationsTableLayoutModelViewList)
{
    if (lastReservationId == item.ReservationId)
    {
        count++;
    }
    else
    {
        count = 0;
        <script>color = getRandomColor();//New color since it is a new reservation</script>
    }

    <script>
        $(".card-free[reservation-id='@item.ReservationId']").eq(0).removeClass('card-free').addClass('card-occupier').css("background", color).appendTo($(".cell[x='@item.LayoutX'][y='@item.LayoutY']").eq(0));
        $(".cell[x='@item.LayoutX'][y='@item.LayoutY']").eq(0).addClass('cell-occupied').children().children().addClass("text-occupied");
    </script>

    lastReservationId = item.ReservationId;
}
<script>
    $(".card-occupier").append("<span class='fa fa-times fa btn-delete' style='font-size: 5vw; cursor: pointer; display: none;'></span>");
</script>

<script>
    var longpress = 500;
    var start;


    var longpress2 = 500;
    var start2;

    jQuery(".text-occupied").on('mousedown', function (e) {
        start = new Date().getTime();
    });

    jQuery(".text-occupied").on('mouseleave', function (e) {
        start = 0;
    });

    jQuery(".text-occupied").on('mouseup', function (e) {
        if (new Date().getTime() >= (start + longpress)) {
            $(this).toggle();
            $(this).siblings("span").toggle();
        } else {
            //alert('short press!');
        }
    });

    jQuery(".btn-delete").on('mousedown', function (e) {
        start2 = new Date().getTime();
    });

    jQuery(".btn-delete").on('mouseleave', function (e) {
        start2 = 0;
    });

    jQuery(".btn-delete").on('mouseup', function (e) {
        if (new Date().getTime() >= (start2 + longpress2)) {
            $(this).toggle();
            $(this).siblings("span").toggle();
        } else {
            //alert('short press!');
            $(this).parent().parent().removeClass("cell-occupied");
            $(this).parent().appendTo(".items-col");
            $(this).toggle();
            $(this).siblings("span").toggle().removeClass("text-occupied").css("display", "");
            $(this).parent().removeClass("card-occupier").addClass("card-free");
            $(this).parent().css("background", "").css("height", "").css("width", "");
        }
    });
</script>


<style>

    .trash-bin {
        display: none;
        position: fixed;
        top: 10%;
        right: 10%;
        width: 5vw;
        height: 5vw;
        border: solid 1px white;
        -webkit-box-shadow: 0 0 10px black;
        box-shadow: 0 0 15px black;
        border-radius: 60%;
    }

    body {
        background: white;
        font-family: helvetica, sans-serif;
        font-size: x-small;
    }

    .grid {
        margin: 2px;
        padding: 0.1em;
    }

    .col {
        background: white;
        display: inline-block;
    }

    .cell {
        width: 6vw;
        height: 6vw;
        background: transparent;
        border-style: solid;
        border-width: 1px;
        border-color: black;
        margin: 5px;
    }

    .cell-hover {
        background: #c4ef8f;
    }

    .cell-occupied {
        border-style: dotted;
    }

    .cell-occupiable {
    }

    .card {
        background: #2184be;
        color: white;
        text-align: center;
    }

    .card-free {
        background: #2196F3;
        color: white;
        width: 2.5vw;
        height: 2.5vw;
        border-style: solid;
        border-width: 1px;
        border-color: black;
        margin: 5px;
        margin-bottom: -18px;
        z-index: 999;
    }

        .card-free:nth-child(even) {
            margin-left: 20px !important;
        }

    .card-occupier {
        display: table;
        width: 80% !important;
        height: 80% !important;
        border-radius: 5px;
        left: 10% !important;
        top: 10% !important;
    }

    .text-occupied {
        display: table-cell;
        vertical-align: middle;
        width: 100%;
        margin: 0 auto;
        text-align: center;
        font-size: 3vw;
        max-width: 1px !important;
        word-wrap: break-word !important;
        white-space: pre-line;
    }

    .card-free {
        display: inline-block;
    }

    .cell-occupiable.no-table {
        opacity: 1;
    }

    .no-table {
        background-color: #9fa09f;
    }

    .items-col {
        margin-left: 20%;
    }
</style>
